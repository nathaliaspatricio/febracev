@article{umphress02,
	abstract = {A process-oriented perspective on large student projects guides students in integrating end-to-end lifecycle skills and provides consistency of experience among projects. After conducting 49 capstone projects, the authors learned that they must cultivate a process culture; that agile processes provide a bridge from ad hoc course programming assignments to organized project work; process requires a suitable infrastructure of tools and process expertise and they should be written to focus learning.},
	address = {Los Alamitos, CA, USA},
	author = {Umphress, David   and Hendrix, Dean  T.  and Cross, James  H. },
	citeulike-article-id = {4218355},
	doi = {10.1109/MS.2002.1032858},
	issn = {0740-7459},
	journal = {IEEE Software},
	keywords = {development, xp},
	number = {5},
	pages = {78--85},
	posted-at = {2009-03-25 13:33:27},
	priority = {2},
	publisher = {IEEE Computer Society},
	title = {Software Process in the Classroom: The Capstone Project Experience},
	url = {http://dx.doi.org/10.1109/MS.2002.1032858},
	volume = {19},
	year = {2002}
}

@inproceedings{schneider03,
	abstract = {To address the problems of traditional software development, recent years have shown the introduction of more light-weight or "agile" development processes (eXtreme Programming being the most prominent one). These processes are intended to support early and quick production of working code by structuring the development into small release cycles and focus on continual interaction between developers and customers. As such software development processes become more popular there is a growing demand from industry to introduce agile development practices in tertiary education. This is not a straightforward task as the corresponding practices may run counter to educational goals or may not be adjusted easily to a learning environment. In this paper, we discuss some of these issues and reflect on the problems of teaching agile processes in tertiary education.},
	author = {Schneider, J.  and Johnston, L. },
	citeulike-article-id = {126483},
	doi = {10.1109/ICSE.2003.1201242},
	booktitle = {Proceedings of the 25th International Conference on Software Engineering},
	keywords = {development, education, xp},
	pages = {594--599},
	posted-at = {2009-03-25 13:31:36},
	priority = {2},
	title = {eXtreme programming at universities - an educational perspective},
	url = {http://dx.doi.org/10.1109/ICSE.2003.1201242},
	year = {2003}
}

@inproceedings{noble04,
	abstract = {Industrial practice in software engineering has developed in recent years from rigid heavyweight document-based development techniques, such as the Rational Unified Process, to incorporate more agile, iterative, communication-centric approaches such as Extreme Programming. This shift has created a need for a similar shift in software engineering education. We report our experience of incorporating an Extreme Programming option into an existing document-centric software project course. While students taking the option were generally positive about Extreme Programming, the projects' external clients had a more mixed experience.},
	address = {Darlinghurst, Australia, Australia},
	author = {Noble, James   and Marshall, Stuart   and Marshall, Stephen   and Biddle, Robert  },
	booktitle = {ACE '04: Proceedings of the sixth conference on Australasian computing education},
	citeulike-article-id = {3879931},
	keywords = {development, education, xp},
	location = {Dunedin, New Zealand},
	pages = {217--226},
	posted-at = {2009-03-25 13:31:23},
	priority = {2},
	publisher = {Australian Computer Society, Inc.},
	title = {Less Extreme Programming},
	url = {http://portal.acm.org/citation.cfm?id=979968.979997},
	year = {2004}
}

@inproceedings{keefe04,
	abstract = {This paper describes the experience at Swinburne TAFE of using the Extreme Programming software development methodology with a final year capstone project. It found that it was possible to use the methodology successfully for such a project, but that students need to be actively coached in the skills necessary to make XP. A positive result was that less skilled students made more progress than probably would have been the case using a traditional methodology.},
	address = {Darlinghurst, Australia, Australia},
	author = {Keefe, Karen   and Dick, Martin  },
	booktitle = {ACE '04: Proceedings of the sixth conference on Australasian computing education},
	citeulike-article-id = {4218364},
	keywords = {development, education, xp},
	location = {Dunedin, New Zealand},
	pages = {151--160},
	posted-at = {2009-03-25 13:30:26},
	priority = {2},
	publisher = {Australian Computer Society, Inc.},
	title = {Using Extreme Programming in a capstone project},
	url = {http://portal.acm.org/citation.cfm?id=979989},
	year = {2004}
}

@mastersthesis{sato07,
	author = {Sato, Danilo  T. },
	citeulike-article-id = {4302222},
	keywords = {agile, development, extreme, programming, software, xp},
	location = {S\~{a}o Paulo},
	month = {Agosto},
	posted-at = {2009-04-11 23:29:41},
	priority = {0},
	school = {Universidade de S\~{a}o Paulo},
	title = {Uso eficaz de m\'{e}tricas em m\'{e}todos \'{a}geis de desenvolvimento de software},
	year = {2007}
}

@misc{lopes07,
	address = {S\~{a}o Paulo},
	author = {Lopes, Roseli  },
	citeulike-article-id = {4496472},
	posted-at = {2009-05-08 23:11:35},
	priority = {0},
	school = {Escola Polit\'{e}cnica da Universidade de S\~{a}o Paulo},
	title = {TECNOFAGIA: Uma Mudan\c{c}a de Paradigma para a Educa\c{c}\~{a}o pelos Meios Eletr\^{o}nicos Interativos},
	howpublished = {Tese - Livre Doc\^{e}ncia},
	year = {2007}
}

@book{beck04,
	author = {Beck, Kent   and Andres, Cynthia  },
	citeulike-article-id = {260117},
	isbn = {0321278658},
	keywords = {agile, development, extreme, programming, software, xp},
	month = {November},
	posted-at = {2009-04-12 00:06:10},
	priority = {3},
	publisher = {{Addison-Wesley Professional}},
	title = {Extreme Programming Explained : Embrace Change (2nd Edition)},
	year = {2004}
}
